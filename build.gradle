buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
}

plugins {
	id 'java'
	id 'idea'
	id 'eclipse'
	id 'application'
	id 'net.ltgt.apt' version "0.21"
	id "org.springframework.boot" version "2.3.1.RELEASE"
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
	id "io.freefair.lombok" version "5.1.0"
}

group 'com.bordozer'
archivesBaseName = 'battleship-game'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

bootJar {
	baseName = 'battleship-game'
	launchScript()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	flatDir {
		dirs 'libs'
	}
}

ext {
	spotbugsVersion = '3.1.8'
	mockitoVersion = '3.3.0'
}

dependencies {
	compile group: 'com.bordozer', name: 'commons', version: '3.33'

	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
//	compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
	compile 'org.springframework.boot:spring-boot-starter-websocket'
	compile group: 'org.springframework', name: 'spring-messaging'

	compile group: 'com.github.spotbugs', name: 'spotbugs', version: spotbugsVersion
	compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: spotbugsVersion
	compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
	compileOnly group: 'net.jcip', name: 'jcip-annotations', version: '1.0'
	compile group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '2.3.3'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.0'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.0'
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'

	compile group: 'org.immutables', name: 'value', version: '2.8.8'
	annotationProcessor "org.immutables:value:2.8.8"

	compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
	compile 'ch.qos.logback:logback-classic:1.2.3'
	compile 'ch.qos.logback:logback-core:1.2.3'

	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testImplementation("org.junit.jupiter:junit-jupiter:5.6.0")

	testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
	testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoVersion

	testCompile group: 'org.assertj', name: 'assertj-core', version: '3.16.1'

	testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.2.0'
}

test {
	useJUnitPlatform()
	systemProperties System.properties
	testLogging {
		events "failed"
		exceptionFormat "full"
//		showStandardStreams = true
	}
}

sourceSets {
	main {
		java.srcDir "${buildDir}/generated/source/apt/main"
	}
}

compileJava.dependsOn clean

task stage(dependsOn: ['build', 'src:main:webapp:buildUI', 'clean'])
build.mustRunAfter clean

task copyToLib(type: Copy) {
	into "$buildDir/libs"
	from(configurations.compile)
}
stage.dependsOn(copyToLib)

gradle.taskGraph.whenReady {
	taskGraph ->
		if (taskGraph.hasTask(stage)) {
			test.enabled = false
		}
}
