image: openjdk:11

pipelines:
  default:
    - step:
        name: Build UI
        caches:
          - gradle
        script:
          - bash ./gradlew buildUI -x check
    - step:
        name: Build application artifact
        caches:
          - gradle
        script:
          - bash ./gradlew build -x check
        artifacts:
          - build/libs/battleship-game.jar
    - step:
        name: Unit tests
        caches:
          - gradle
        script:
          - bash ./gradlew test
    - step:
        name: Deploy to AWS prod
        deployment: production
        trigger: manual
        script:
          - bash wget "https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_386.zip"
          - bash unzip -o "terraform_0.12.28_linux_386.zip" -d ~/bin
          - bash terraform -version
          - bash cd terraform/webservice
          - bash ./tf_apply.sh prod

#  custom:
#    - variables:
#        terraform: "terraform_0.12.28_linux_386.zip"

#  branches:
#    master:
#      - step:
#          name: Deploy to AWS - prod
#          deployment: production
#          trigger: manual
#          script:
#            - bash wget "https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_amd64.zip"
#            - bash unzip -o "terraform_0.12.28_linux_amd64.zip" -d ~/bin
#            - bash terraform -version
#            - bash cd terraform/webservice
#            - bash ./tf_apply.sh prod
